//*******SEAMLESS INTEGRATION*******//
var express = require('express');
var bodyParser = require('body-parser');
var app = express();
var path = require('path');
var request = require("request");
var EventEmitter = require("events").EventEmitter;
var IPN = new EventEmitter();
var urlencodedParser = bodyParser.urlencoded({extended: true});
var md5 = require('md5');

app.use(bodyParser.json());

app.use('/css', express.static(path.join(__dirname, 'css')));
app.use('/images', express.static(path.join(__dirname, 'images')));


var merchant_id = "";//Insert merchant id here
var orderid = ""; // Order ID should be random generated by merchant function
var vkey = "**********"; //Replace ********** with your MOLPay verification_Key
var secret_key = "**********";//Replace ********** with your MOLPay Private Secret_Key
var key0;
var key1;

var enviroment = "sandbox"; //sandbox or production
var URL;

//choose your environment
if (enviroment == "sandbox"){
    URL = "https://sandbox.molpay.com/MOLPay/API/chkstat/returnipn.php"; //return ipn url
} else if(enviroment == "production"){
    URL = "https://www.onlinepayment.com.my/MOLPay/API/chkstat/returnipn.php"; //return ipn url
}

//****MANDATORY VARIABLES********//
var Default = 1;//Default value, DO NOT CHANGE
var treq = 1; // Default value, DO NOT CHANGE
var status;
var mpsmerchantid;
var mpschannel;
var mpsamount;
var mpsorderid;
var mpsbill_name;
var mpsbill_email;
var mpsbill_mobile;
var mpsbill_desc;
var mpscountry;
var mpsvcode;
var mpscurrency;
var mpslangcode;
var mpstimer;
var mpstimerbox;
var mpscancelurl;
var mpsreturnurl;
var mpsapiversion;

var amount;
var tranID;
var domain;
var appcode;
var paydate;
var currency;
var skey;
var error_code;
var error_desc;
var channel;

// The '/' below reads from the main directory where your project is at. Just make sure your codes are in the same folder or directory
app.get('/',  function(req, res) {
    res.sendFile(path.join(__dirname + '/index.html'));// Opens your main html file
});

function MolPayProcessing(req,res){
    status = true;// Set True to proceed with MOLPay
    mpsmerchantid = merchant_id;
    mpschannel = req.body.payment_options;
    mpsamount = req.body.total_amount;
    mpsorderid = orderid; //Order ID should be a random generated value by merchant
    mpsbill_name = req.body.billingFirstName + " " + req.body.billingLastName;
    mpsbill_email = req.body.billingEmail;
    mpsbill_mobile = req.body.billingMobile;
    mpsbill_desc = req.body.billingAddress;
    mpscountry  = "MY";
    mpsvcode  = md5(req.body.total_amount + merchant_id + orderid + vkey);
    mpscurrency = req.body.currency;
    mpslangcode = "en";
    mpstimer = req.body.molpaytimer;
    mpstimerbox = "#counter";
    mpsreturnurl = "http://localhost:8080/returnurl"; // Enter your return url here
    mpscancelurl = "http://localhost:8080/cancelurl"; // Enter your cancel url here
    mpsapiversion = "3.16"; //**NOTE:  For production use 3.17 / Sandbox use latest or 3.16

    //The following response codes are used to display the above parameters in the console
    //This is to ensure and check all the parameters are correct for testing purpose
    check = {
        status,
        mpsmerchantid,
        mpschannel,
        mpsamount,
        mpsorderid,
        mpsbill_name,
        mpsbill_email,
        mpsbill_mobile,
        mpsbill_desc,
        mpscountry,
        mpsvcode,
        mpscurrency,
        mpslangcode,
        mpstimer,
        mpstimerbox,
        mpscancelurl,
        mpsreturnurl,
        mpsapiversion
    };

    console.log(check); // Display to console
    res.send(JSON.stringify(check));//convert the check array into JSON format and parse it to '/returnurl'
}

//Variables are stored in function to prevent callback of response twice
function MolPayObj(req,res){
    amount = req.body.amount;
    tranID  = req.body.tranID ;
    domain  = merchant_id;
    status = req.body.status;
    appcode = req.body.appcode;
    paydate = req.body.paydate;
    currency = req.body.currency;
    skey = req.body.skey;
    error_code = req.body.error_code;
    error_desc = req.body.error_desc;
    channel = mpschannel;

    //The following response codes are used to display the output in '/returnurl'  and in the console
    //This can also be used as a receipt, you can change the way the output is displayed if you like
    response = {
        amount,
        orderid,
        tranID,
        domain,
        status,
        appcode,
        paydate,
        currency,
        skey,
        error_code,
        error_desc,
        channel
    };

    /***********************************************************
     * To verify the data integrity sending by MOLPay
     ************************************************************/
    //md5 encryption
    key0 = md5( tranID+orderid+status+domain+amount+currency );
    key1 = md5( paydate+domain+key0+appcode+secret_key );

    //control statement for verification
    if(skey != key1){
        status = -1; // Invalid transaction
        console.log('Invalid');
        //Failure action
        //Write your script here
    }else
    {
        console.log('Approved');
    }

    console.log(response);
    res.end(JSON.stringify(response));//convert the response in JSON format and print it to '/returnurl'
    IPN.emit("update"); // Trigger request to post back to IPN
}

//Handles post data, a directory '/returnurl' is created to receive post data
//The '/returnurl' below can be changed to your own return url link name/directory
//This is the same if you want to use it for your callback url

app.post('/processing', urlencodedParser, function(req, res){
    MolPayProcessing(req,res); // Calls function to handle post data
});

app.post('/returnurl', urlencodedParser, function(req, res){
    MolPayObj(req,res); // Calls function to handle post data
});

//To handle cancel request
app.post('/cancelurl', urlencodedParser, function(req, res){
    res.send("You have cancelled order. Thank you");
});

//calls request to post back data for IPN (Instant Payment Notification)
IPN.on('update', function () {
    request.post({
        uri: URL,
        headers: {"Content-Type": "application/x-www-form-urlencoded"},
        form :
            {
                treq : treq,
                amount : amount,
                orderid : orderid,
                tranID : tranID,
                domain : domain,
                status : status,
                appcode : appcode,
                paydate : paydate,
                currency : currency,
                skey : skey,
                error_code :error_code,
                error_desc : error_desc,
                channel : channel
            }

    }, function(err, res, body) {
        if (err) {
            console.log(err);
        } else {
            console.log("done");
            console.log(body);
        }
    });
});

var server = app.listen(8080, function(){
    var host = server.address().address;
    var port = server.address().port;
    console.log("Example app listening at http://%s:%s", host, port);
});

/*
 * The MIT License
 *
 * Copyright 2018 MOLPay Sdn Bhd.
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the "Software"), to deal
 * in the Software without restriction, including without limitation the rights
 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 * copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in
 * all copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
 * THE SOFTWARE.
 */